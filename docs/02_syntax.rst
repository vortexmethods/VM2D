Синтаксис исходных файлов 
=========================

Все файлы с исходными данными и всевозможными настройками для **VM2D** являются текстовыми и имеют единый *С++*-подобный синтаксис.

*      Допутимы комментарии двух видов по образцу *С++*:

       *     ``//`` - комментарий от текущей позиции до конца строки;

       *     ``/* ... */`` - комментарий фрагмента произвольной длины, в том числе многострочного (такие комментарии не могут быть вложенными);

*      переход на новую строку эквивалентен пробелу;
*      пробелы в исходных файлах и знаки табуляции игнорируются. 


Файлы с исходными данными организованы как *словари*, т.е. по принципу

.. code-block:: c
   :name: key1
   
   ключ1 = значение1;
   ключ2 = значение2;
   ...

*Ключи* являются регистро-нечувствительными, т.е. ``ключ1``, ``Ключ1``, ``КЛЮЧ1``, ``КлЮч1`` означают одно и то же.

*Значения* могут быть как *простыми*, так и представлять собой *списки*, которые в этом случае заключаются в фигурные скобки, а отдельные значения внутри списка разделяются запятыми

.. code-block:: c
   :name: key2
   
   ключ1 = значение1;
   ключ2 = {значение21, значение22};
   ключ3 = {значение31, значение32, значение33,};

В конце списка значений перед закрывающейся фигурной скобкой допустимо оставлять запятую, она в этом случае будет проигнорирована.

Тип значений произволен - это могут быть целые числа, числа с плавающей точкой, логические значения (``true``/``false``, или, что то же самое, ``yes``/``no``; можно также и ``0``/``1``), символы, строки. Строковые значения без пробелов можно указывать как в кавычках, так и без них; если же строковое значение содержит пробел, запятую, точку с запятой или скобки, то его обязательно нужно заключить в двойные кавычки:

.. code-block:: c
   :name: key3
   
   целыйключ1      = 12;
   дробныйключ2    = 6.22;
   векторныйключ3  = {3.14159265, 2.71828183};
   логическийключ4 = true;
   логическийключ5 = no;
   строковыйключ6  = "Hello, World!";  // строковые значения - 
   строковыйключ7  = Goodbye;          // регистро-чувствительные

Тип значений, соответствующих ключам, при чтении файлов не анализируется и не контролируется, сами значения первоначально считываются просто как наборы символов (строки). При обращении к соответствующему параметру из исполняемой программы вызываются функции преобразования считанных строк к нужному типу. 

Некоторые значения бывают *сложными*, т.е. в свою очередь зависят от некоторых параметров, в этом случае параметры таких значений указываются в круглых скобках

.. code-block:: c
   :name: key4
   
   ключ1 = значение1(параметр1);




