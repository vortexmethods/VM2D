Настройка решаемой задачи
=========================


Паспорт расчета ``passport``
----------------------------


В предыдущем разделе был рассмотрен пример файла ``problems``, в котором предполагалось решение трех аналогичных задач, которые, как можно догадаться из названий, состоят в моделировании обтекания крыла, установленного под некоторым углом атаки к набегающему потоку. Приведем здесь этот файл повторно.

.. code-block:: c
   :caption: problems
   :name: problemsRepeat
	
   /*--------------------------------*- VM2D -*-----------------*---------------*\
   | ##  ## ##   ##  ####  #####   |                            | Version 1.11   |
   | ##  ## ### ### ##  ## ##  ##  |  VM2D: Vortex Method       | 2022/08/07     |
   | ##  ## ## # ##    ##  ##  ##  |  for 2D Flow Simulation    *----------------*
   |  ####  ##   ##   ##   ##  ##  |  Open Source Code                           |
   |   ##   ##   ## ###### #####   |  https://www.github.com/vortexmethods/VM2D  |
   |                                                                             |
   | Copyright (C) 2017-2022 Ilia Marchevsky, Kseniia Sokol, Evgeniya Ryatina    |
   *-----------------------------------------------------------------------------*
   | File name: problems                                                         |
   | Info: Problems to be solved by using VM2D                                   |
   \*---------------------------------------------------------------------------*/
   problems = {
       wing00deg(np = 1, angle =  0, tau = 1.5e-2),
       wing05deg(np = 2, angle =  5, tau = 1.5e-2),
       wing10deg(np = 2, angle = 10, tau = 2.0e-2)
   };
   
Чтобы выполнить три данных расчета, в *рабочем каталоге* должны быть созданы подкаталоги с именами, соответствующими меткам задач: ``wing00deg``, ``wing00deg`` и ``wing00deg``.

Внутри каждого из таких подкаталогов обязательно должен присутствовать файл *паспорта расчета*, который по умолчанию носит имя ``passport``, но при необходимости может быть и переименован (см. предыдущий раздел).

Файл *паспорта расчета*, который мог бы быть использован применительно к данным задачам, имеет следующий вид.

.. code-block:: c
   :caption: passport
   :name: passport
	
   /*--------------------------------*- VM2D -*-----------------*---------------*\
   | ##  ## ##   ##  ####  #####   |                            | Version 1.11   |
   | ##  ## ### ### ##  ## ##  ##  |  VM2D: Vortex Method       | 2022/08/07     |
   | ##  ## ## # ##    ##  ##  ##  |  for 2D Flow Simulation    *----------------*
   |  ####  ##   ##   ##   ##  ##  |  Open Source Code                           |
   |   ##   ##   ## ###### #####   |  https://www.github.com/vortexmethods/VM2D  |
   |                                                                             |
   | Copyright (C) 2017-2022 Ilia Marchevsky, Kseniia Sokol, Evgeniya Ryatina    |
   *-----------------------------------------------------------------------------*
   | File name: passport                                                         |
   | Info: Parameters of the problem to be solved                                |
   \*---------------------------------------------------------------------------*/

   //Physical Properties
   rho = 1.0;          // flow density
   vInf = {1.0, 0.0};  // incident flow velocity
   //vRef = 1.0;       // reference velocity magnitude, isn't used here
   nu = 0.001;         // kinematic viscosity coefficient

   //Time Discretization Properties
   timeStart = 0.0;    // *physical time at which the simulation starts
   timeStop = 50.0;    //  physical time at which the simulation stops
   dt = $tau;          //  the specific value is set in a batch file, e.g., 1.5e-2
   accelVel = Impulse; // *RampLin(T) and RampCos(T) modes are supported

   fileType = text;      // *text or binary format for output vtk-files
   saveVtx = 100;        // *frequency (in steps) of vortices storing
   saveVP = 100;         // *the same velocity & pressure
   nameLength = 5;       // *number of digits in file names

   //Wake Discretization Properties
   eps = 0.0015;       //  vortex core smoothing radius (should be small)
   epscol = 0.0040;    //  vortex particles merging distance
   distFar = 20.0;     // *the distance of the vortex wake cropping
   delta = 5e-6;       // *distance from airfoil to the generating vortices
   vortexPerPanel = 1; // *minimal number of vortices generating over each panel
   maxGamma = 1.0e-4;  // *maximal vortex particle strength

   //Numerical Schemes
   linearSystemSolver = linearSystemGauss;  // *fast methods are under constr.
   velocityComputation = velocityBiotSavart;// *Barnes-Hut method is supported
   panelsType = panelsRectilinear;          // *curvilin. panels are under constr.
   boundaryConditionSatisfaction = boundaryLinearLayerAverage; // *T^1 scheme

   //Files and parameters
   airfoilsDir = "../settings/airfoils/"; // *path to discretized airfoils
   wakesDir    = "../settings/wakes/";    // *path to vortex wakes

   airfoil = {
       "naca0012"(                                          // *file name
           basePoint = {1.0, 0.0}, scale = 1.0,             // *geometry
           inverse = false,                                 // *external flow
           angle = $angle,                                  // *AoA
           mechanicalSystem = mechanicsRigidImmovable()) }; // *mechanics

   fileWake = { };   // *previously stored vortex wake can be loaded
   fileSource = { }; // *positions and intensities of point sources/sinks
   

Смысл большинства параметров должен быть ясен из их названий и приведенных кратких комментариев. Звездочкой рядом с комментарием отмечены те из параметров, для которых имеются значения по умолчанию с *низшим приоритетом* и которые, соответственно, могут быть опущены при условии, что значения по умолчанию являются подходящими.
  
Значения по умолчанию с *низшим приоритетом*, которые заданы непосредственно в коде **VM2D**, перечислены в следующей таблице.

+-------------------+-----------------+--------------------------------------+
| Название          | Значение по     | Описание                             |
| параметра         | умолчанию       |                                      |
+===================+=================+======================================+
| timeStart         | 0.0             | время начала расчета                 |
+-------------------+-----------------+--------------------------------------+
| accelVel          | RampLin(1.0)    | линейное нарастание скорости         |
|                   |                 | набегающего потока в течение первой  |
|                   |                 | 1.0 секунды физического времени      |
+-------------------+-----------------+--------------------------------------+
| fileType          | text            | текстовый формат выходных файлов vtk |
+-------------------+-----------------+--------------------------------------+
| saveVtx           | 100             | сохранять положение вихревых частиц  |
|                   |                 | через каждые 100 шагов расчета       |
+-------------------+-----------------+--------------------------------------+
| saveVP            | 0               | не производить расчет скоростей и    |
|                   |                 | давления в заданных точках в потоке  |
|                   |                 | (для сохранения нужно задать шаг)    |
+-------------------+-----------------+--------------------------------------+
| nameLength        | 5               | длина имени файла                    |
+-------------------+-----------------+--------------------------------------+
| distFar           | 10.0            | расстояние от начала координат, за   |
|                   |                 | пределами которого вихревые частицы  |
|                   |                 | исключаются из рассмотрения          |
+-------------------+-----------------+--------------------------------------+
| delta             | 1.0e-5          | малая величина, определяющая         |
|                   |                 | расстояние по нормали от панели      |
|                   |                 | профиля до вновь генерируемой        |
|                   |                 | вихревой частицы                     |
+-------------------+-----------------+--------------------------------------+
| vortexPerPanel    | 1               | наименьшее число вихревых частиц,    |
|                   |                 | генерируемых над каждой панелью      |
|                   |                 | профиля на каждом шаге расчета       |
+-------------------+-----------------+--------------------------------------+
| maxGamma          | 0.0             | наибольшая величина циркуляции       |
|                   |                 | вихревой частицы не ограничивается   |
|                   |                 | сверху (для ограничения нужно задать |
|                   |                 | величину допустимой циркуляции)      |
+-------------------+-----------------+--------------------------------------+
| panelsType        |panelsRectilinear| прямолинейные панели на профиле      |
+-------------------+-----------------+--------------------------------------+
| boundaryCondition | constLayerAver  | генерируемая на профиле завихренность|
|                   |                 | представляется в виде вихревого слоя |
|                   |                 | с кусочно-постоянной завихренностью  |
|                   |                 | (по панелям)                         |
+-------------------+-----------------+--------------------------------------+
| linearSystemSolver|linearSystemGauss| решение СЛАУ - дискретного аналога   |
|                   |                 | граничного интегрального уравнения   |
|                   |                 | методом Гаусса (LU-разложения)       |
+-------------------+-----------------+--------------------------------------+
|velocityComputation|biotSavart       | расчет скоростей вихревых частиц     |
|                   |                 | прямым методом (закон Био-Савара)    |
+-------------------+-----------------+--------------------------------------+
| airfoilsDir       | ../settings/    | путь к файлам профилей               |
|                   | airfoils/       |                                      |
+-------------------+-----------------+--------------------------------------+
| wakesDir          | ../settings/    | путь к файлам с вихревыми следами    |
|                   | wakes/          |                                      |
+-------------------+-----------------+--------------------------------------+
| fileWake          | ""              | не требуется загружать вихревой след |
|                   | (пустая строка) |                                      |
+-------------------+-----------------+--------------------------------------+
| fileSource        | ""              | не требуется загружать источники     |
|                   | (пустая строка) |                                      |
+-------------------+-----------------+--------------------------------------+
| airfoil           | {}              | не требуется загружать профили       |
|                   | (пустой список) |                                      |
+-------------------+-----------------+--------------------------------------+
| basePoint         | {0.0, 0.0}      | положение базовой точки (центра)     |
|                   |                 | загружаемого профиля                 |
+-------------------+-----------------+--------------------------------------+
| scale             | 1.0             | коэффициент масштабирования профиля  |
+-------------------+-----------------+--------------------------------------+
| angle             | 0.0             | угол атаки                           |
+-------------------+-----------------+--------------------------------------+
| inverse           | false           | означает моделирование внешнего по   |
|                   |                 | отношению к данному профилю течения  |
+-------------------+-----------------+--------------------------------------+
| mechanicalSystem  | rigidImmovable  | неподвижный недеформируемый профиль  |
+-------------------+-----------------+--------------------------------------+

Эти параметры могут быть при необходимости переопределены в файле ``defaults``, там же могут быть заданы значения по умолчанию для других параметров.

Приведем дополнительные пояснения для параметров, значения которых менее очевидны:

*  *vRef* задает масштаб скорости, должен быть обязательно указан в задачах, где набегающий поток отсутствует, т.е. *vInf = {0.0, 0.0}*, поскольку выступает в качетсве масштаба скорости при расчете безразмерных параметров; при наличии набегающего потока в качестве *vRef* автоматически используется модуль вектора *vInf*;
 
*  *accelVel* определяет способ "разгона" набегающего потока от нуля до значения *vInf*, может принимать следующие значения:
    
    *  *Impulse* - мгновенный старт набегающего потока,
    *  *RampLin(T)* - линейное нарастание величины скорости набегающего потока от нуля до значения *vInf* в течение *T* секунд,
    *  *RampCos(T)* - нарастание скорости набегающего потока по закону косинуса от нуля до значения *vInf* в течение *T* секунд;
    
*   *saveVtx* и *saveVP* определяют периодичность сохранения в файлы вихревого следа, а также скоростей и давления, вычисленных в заранее заданных точках; задание нулевых значений означает, что сохранять соответствующие данные не требуется (скорости и давление при этом не вычислятся);
 
*   *maxGamma* определяет максимально допустимую величину циркуляции вихревых частиц, генерируемых на профиле, а также получающихся в результате реструктуризации вихревого следа (в последнем случае при удалении от профиля данная величина автоматически несколько увеличивается); задание нулевого значения означает, что циркуляции вихревых частиц сверху не ограничены.


Параметр *airfoil* определяет, обтекание какого профиля планируется моделировать. Файлы с профилями хранятся в каталоге, имя которого определяется параметром *airfoilsDir* (в репозитории это каталог ``/settings/airfoil``); содержимое этих фалов - положения вершин профиля, обходимого против часовой стрелки. Их декартовы координаты задаются в качестве значения ключа *r* и представляют собой список пар чисел. Примеры можно посмотреть в файлах репозитория.
Если имя файла не содержит пробелов, то его можно указывать без кавычек, в противном случае необходимы двойные кавычки. 

После имени файла профиля в скобках указываются следующие параметры:

+-----------------+-----------------------------------------+
| Название        | Описание                                |
| параметра       |                                         |
+=================+=========================================+
| basePoint       | координаты точки, в которую следует     |
|                 | поместить базовую точку (центр) профиля |
+-----------------+-----------------------------------------+
| scale           | коэффициент масшабирования формы профиля|
+-----------------+-----------------------------------------+
| inverse         | булевский параметр, который при расчете |
|                 | внутренних течений должен быть *true*   |
+-----------------+-----------------------------------------+
| angle           | угол атаки профиля (по часовой стрелке) |
+-----------------+-----------------------------------------+
| mechanicalSystem| метка (тип) механической системы,       |
|                 | соответствующей данному профилю         |
+-----------------+-----------------------------------------+


Если производится моделирование обтекания системы профилей, они должны быть последовательно перечислены в списке, соответствующем ключу *airfoil*:

.. code-block:: c
   :caption: passport
   :name: passport2

    airfoil = {
        square_160points(
            basePoint = {0.0, 0.0},
            angle = 45.0,
            scale = 1.0
            ),
        circle_200points(
            basePoint = {1.2, -0.2},
            angle = 0.0,
            scale = 0.5
            )

В этом примере рассматривается интерференция двух профилей: малый (уменьшенный в 2 раза по сравнению с базовой формой) круговой цилиндр, форма которого задана в файле ``circle_200points``, располагается позади квадратного профиля из файла ``square_160points`` (установленного "ромбом" под углом атаки 45 градусов) в его вихревом следе. Все остальные параметры берутся из значений по умолчанию.

Также имеетмся вохможность загрузить ранее сохраненное распределение вихревых частиц (параметр *fileWake*) и положения неподвижных точечных источников/стоков в области течения (параметр *fileSource*). Каталог, в котором располагаются эти файлы, задается переменной *wakesDir*. Источники и стоки, как правило, используются при моделировании внутренних течений.


В рассмотренном примере *паспорта расчета* два параметра не определены явно: величина шага расчета по времени *dt* и угол атаки профиля *angle*. Соответствующие шаблонные параметры отмечены знаком *$*, который означает, что в качестве этих параметров следуе взять значения, определенные пользователем в файле ``problems`` для данной задачи (в скобках после метки задачи). Это позволяет делать паспорт "универсальным" и автоматизировать процедуру решения задач: для того, чтобы воспользоваться соответствующей возможностью, необходимо в файле ``problems`` указать ключ *copyPath*, в качестве значения которого требуется указать имя каталога, где хранится "универсальный" паспорт, например, так:


.. code-block:: c
   :caption: problems
   :name: problems2

   problems = {
       wing00deg(np = 1, angle =  0, tau = 1.5e-2, copyPath = "./wingBase"),
       wing05deg(np = 2, angle =  5, tau = 1.5e-2, copyPath = "./wingBase"),
       wing10deg(np = 2, angle = 10, tau = 2.0e-2, copyPath = "./wingBase"),
   };
   
В результате все необходимые каталоги, соответствующие меткам решаемых задач, будут созданы автоматически, и в них будут скопированы все файлы, содержащиеся в указанной в ключе *copyPath* файлы (там должен содержаться, по крайней мере, файл с *паспортом задачи*, который с очевидностью должен содержать шаблонные параметры, иначе вс расчеты окажутся идентичными!).



Точки вычисления скоростей и давления ``pointsVP``
--------------------------------------------------

В файле ``pointsVP`` перечисляются точки, в которых в процессе счета будут периодически вычисляться скорости и давление с целью сохранения соответствующих полей в файлы.

В этом файле можно указать два ключа: 

*    *points* - точки, скорости и давление в которых будет сохряняться в vtk-файлы с соответствующей периодичностью;
*    *history* - точки, для каждой из которых дополнительно будет создан файл, содержащий историю изменения соответствующих параметров в данной точке.

Файл ``pointsVP`` может отсвутствовать в том случае, когда в паспорте расчета параметр *saveVP* установлен равным нулю.
